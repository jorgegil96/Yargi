
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'varcteAND BOOL CID CLASS COMA COMENTARIOS COMILLAS CORCHDER CORCHIZQ DIFERENTE DOSPUNTOS ELSE EOL FLECHITA FLOAT FOR FUN GLOBAL ID IF IGUAL IGUALIGUAL IN INT LIST LLAVEDER LLAVEIZQ MAIN MAS MAYOROIGUAL MAYORQUE MENOROIGUAL MENORQUE MENOS OR PARDER PARIZQ POR PUNTO PUNTOSRANGO RANGE READ RETURN SOBRE STRING WHEN WHILE WRITE\n    resultado : class\n    \n    class : CLASS CID classparams class2 body\n    \n    class2 : DOSPUNTOS CID PARIZQ vars2 PARDER\n    | empty\n    \n    classparams : PARIZQ classparams2 PARDER\n    \n    classparams2 : vars\n    | empty\n    \n    bloque : LLAVEIZQ estatuto bloque2 LLAVEDER\n    \n    bloque2 : RETURN bloque3\n    | empty\n    \n    bloque3 : expresion\n    | empty\n    \n    expresion : exp oplog EOL\n   | CID PARIZQ expresion2 PARDER EOL\n   \n    expresion2 : expresion expresionr\n    | empty\n    \n    expresionr : COMA expresion expresionr\n    | empty\n    \n    oplog : MAYORQUE exp\n    | MENORQUE exp\n    | DIFERENTE exp\n    | MAYOROIGUAL exp\n    | MENOROIGUAL exp\n    | IGUALIGUAL exp\n    | empty\n    \n    exp : termino expr EOL\n    \n    expr : MAS termino expr\n    | MENOS termino expr\n    | empty\n    \n    vars : tipo vars2\n    | tipo LIST vars2\n    \n    varsr : COMA ID varsr\n    | empty\n    \n    vars2 : ID varsr\n    | empty\n    \n    estatuto : asignacion estatuto\n    | condicion estatuto\n    | escritura estatuto\n    | for estatuto\n    | while estatuto\n    | when estatuto\n    | empty\n    \n    asignacion : ID asignacion3 IGUAL asignacion2 EOL\n    \n    asignacion2 : expresion\n    | CORCHDER expresion asignacion2r CORCHIZQ\n    | READ PARIZQ expresion PARDER\n    \n    asignacion2r : COMA expresion\n    | empty\n    \n    asignacion3 : CORCHIZQ varcte CORCHDER\n    | PUNTO ID\n    | empty\n    \n    condicion : IF condicion2 condicionr estatutor\n    \n    condicion2 : PARIZQ expresion PARDER bloque\n    \n    condicionr : ELSE IF condicion\n    | empty\n    \n    estatutor : ELSE bloque\n    | empty\n    \n    escritura : WRITE PARIZQ esc1 esc2 PARDER\n    \n    esc1 : expresion\n    | STRING\n    \n    esc2 : COMA esc1 esc2\n    | empty\n    \n    termino : factor terminor\n    \n    terminor : POR factor terminor\n    | SOBRE factor terminor\n    | empty\n    \n    tipo : INT\n    | FLOAT\n    | BOOL\n    | STRING\n    | CID\n    \n    factor : PARIZQ expresion PARDER\n    | factor2 varcte\n    \n    varcter : COMA varcte varcter\n    | empty\n    \n    factor2 : MAS\n    | MENOS\n    | empty\n    \n    varcte : ID\n    | INT\n    | FLOAT\n    | BOOL\n    | STRING\n    | ID CORCHIZQ varcte CORCHDER\n    | ID PUNTO ID\n    | ID PARIZQ expresion2 PARDER\n    \n    for : FOR PARIZQ ID IN for2 PARDER bloque\n    \n    for2 : ID\n    | range\n    \n    range : INT PUNTOSRANGO INT\n    \n    while : WHILE PARIZQ expresion PARDER bloque\n    \n    when : WHEN PARIZQ expresion PARDER LLAVEIZQ when2 LLAVEDER\n    \n    when2 : varcte varcter FLECHITA bloque when2\n    | IN range FLECHITA bloque when2\n    | ELSE FLECHITA bloque when2\n    | empty\n    \n    fun : FUN ID PARIZQ fun2 PARDER fun3 bloque\n    \n    fun2 : tipo ID varsr2\n    \n    fun3 : DOSPUNTOS tipo\n    | empty\n    \n    varsr2 : COMA tipo ID varsr2\n    | empty\n    \n    body : LLAVEIZQ body2 funr MAIN PARIZQ PARDER bloque LLAVEDER\n    \n    body2 : vars\n    | empty\n    \n    funr : fun funr\n    | empty\n    empty : '
    
_lr_action_items = {'ID':([0,7,8,9,12,15,20,21,22,25,28,31,32,33,34,35,36,38,40,41,44,45,],[2,2,11,-108,-108,-78,2,-76,-77,-78,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,]),'INT':([0,7,9,12,15,20,21,22,25,28,31,32,33,34,35,36,38,40,41,44,45,],[3,3,-108,-108,-78,3,-76,-77,-78,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,]),'FLOAT':([0,7,9,12,15,20,21,22,25,28,31,32,33,34,35,36,38,40,41,44,45,],[4,4,-108,-108,-78,4,-76,-77,-78,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,]),'BOOL':([0,7,9,12,15,20,21,22,25,28,31,32,33,34,35,36,38,40,41,44,45,],[5,5,-108,-108,-78,5,-76,-77,-78,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,]),'STRING':([0,7,9,12,15,20,21,22,25,28,31,32,33,34,35,36,38,40,41,44,45,],[6,6,-108,-108,-78,6,-76,-77,-78,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,]),'$end':([1,2,3,4,5,6,11,23,26,],[0,-79,-80,-81,-82,-83,-85,-84,-86,]),'CORCHDER':([2,3,4,5,6,10,11,23,26,],[-79,-80,-81,-82,-83,23,-85,-84,-86,]),'POR':([2,3,4,5,6,11,19,23,26,47,48,61,62,],[-79,-80,-81,-82,-83,-85,44,-84,-86,-73,-72,44,44,]),'SOBRE':([2,3,4,5,6,11,19,23,26,47,48,61,62,],[-79,-80,-81,-82,-83,-85,45,-84,-86,-73,-72,45,45,]),'MAS':([2,3,4,5,6,9,11,12,18,19,23,26,28,31,32,33,34,35,36,38,40,41,43,44,45,46,47,48,59,60,61,62,67,68,],[-79,-80,-81,-82,-83,21,-85,21,40,-108,-84,-86,21,21,21,21,21,21,21,21,21,21,-63,21,21,-66,-73,-72,40,40,-108,-108,-64,-65,]),'MENOS':([2,3,4,5,6,9,11,12,18,19,23,26,28,31,32,33,34,35,36,38,40,41,43,44,45,46,47,48,59,60,61,62,67,68,],[-79,-80,-81,-82,-83,22,-85,22,41,-108,-84,-86,22,22,22,22,22,22,22,22,22,22,-63,22,22,-66,-73,-72,41,41,-108,-108,-64,-65,]),'EOL':([2,3,4,5,6,11,16,18,19,23,26,30,37,39,42,43,46,47,48,51,52,53,54,55,56,58,59,60,61,62,64,65,66,67,68,],[-79,-80,-81,-82,-83,-85,-108,-108,-108,-84,-86,50,-25,58,-29,-63,-66,-73,-72,-19,-20,-21,-22,-23,-24,-26,-108,-108,-108,-108,69,-27,-28,-64,-65,]),'CORCHIZQ':([2,],[7,]),'PUNTO':([2,],[8,]),'PARIZQ':([2,9,12,17,28,31,32,33,34,35,36,38,40,41,44,45,],[9,12,12,38,12,12,12,12,12,12,12,12,12,12,12,12,]),'CID':([9,12,28,38,],[17,17,17,17,]),'PARDER':([9,13,14,15,24,27,29,38,49,50,57,63,69,],[-108,26,-108,-16,48,-15,-18,-108,-108,-13,64,-17,-14,]),'COMA':([14,49,50,69,],[28,28,-13,-14,]),'MAYORQUE':([16,58,],[31,-26,]),'MENORQUE':([16,58,],[32,-26,]),'DIFERENTE':([16,58,],[33,-26,]),'MAYOROIGUAL':([16,58,],[34,-26,]),'MENOROIGUAL':([16,58,],[35,-26,]),'IGUALIGUAL':([16,58,],[36,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varcte':([0,7,20,],[1,10,47,]),'expresion2':([9,38,],[13,57,]),'expresion':([9,12,28,38,],[14,24,49,14,]),'empty':([9,12,14,16,18,19,28,31,32,33,34,35,36,38,40,41,44,45,49,59,60,61,62,],[15,25,29,37,42,46,25,25,25,25,25,25,25,15,25,25,25,25,29,42,42,46,46,]),'exp':([9,12,28,31,32,33,34,35,36,38,],[16,16,16,51,52,53,54,55,56,16,]),'termino':([9,12,28,31,32,33,34,35,36,38,40,41,],[18,18,18,18,18,18,18,18,18,18,59,60,]),'factor':([9,12,28,31,32,33,34,35,36,38,40,41,44,45,],[19,19,19,19,19,19,19,19,19,19,19,19,61,62,]),'factor2':([9,12,28,31,32,33,34,35,36,38,40,41,44,45,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expresionr':([14,49,],[27,63,]),'oplog':([16,],[30,]),'expr':([18,59,60,],[39,65,66,]),'terminor':([19,61,62,],[43,67,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> varcte","S'",1,None,None,None),
  ('resultado -> class','resultado',1,'p_resultado','1eraFase.py',119),
  ('class -> CLASS CID classparams class2 body','class',5,'p_class','1eraFase.py',125),
  ('class2 -> DOSPUNTOS CID PARIZQ vars2 PARDER','class2',5,'p_class2','1eraFase.py',131),
  ('class2 -> empty','class2',1,'p_class2','1eraFase.py',132),
  ('classparams -> PARIZQ classparams2 PARDER','classparams',3,'p_classparams','1eraFase.py',138),
  ('classparams2 -> vars','classparams2',1,'p_classparams2','1eraFase.py',144),
  ('classparams2 -> empty','classparams2',1,'p_classparams2','1eraFase.py',145),
  ('bloque -> LLAVEIZQ estatuto bloque2 LLAVEDER','bloque',4,'p_bloque','1eraFase.py',151),
  ('bloque2 -> RETURN bloque3','bloque2',2,'p_bloque2','1eraFase.py',157),
  ('bloque2 -> empty','bloque2',1,'p_bloque2','1eraFase.py',158),
  ('bloque3 -> expresion','bloque3',1,'p_bloque3','1eraFase.py',164),
  ('bloque3 -> empty','bloque3',1,'p_bloque3','1eraFase.py',165),
  ('expresion -> exp oplog EOL','expresion',3,'p_expresion','1eraFase.py',171),
  ('expresion -> CID PARIZQ expresion2 PARDER EOL','expresion',5,'p_expresion','1eraFase.py',172),
  ('expresion2 -> expresion expresionr','expresion2',2,'p_expresion2','1eraFase.py',178),
  ('expresion2 -> empty','expresion2',1,'p_expresion2','1eraFase.py',179),
  ('expresionr -> COMA expresion expresionr','expresionr',3,'p_expresionr','1eraFase.py',185),
  ('expresionr -> empty','expresionr',1,'p_expresionr','1eraFase.py',186),
  ('oplog -> MAYORQUE exp','oplog',2,'p_oplog','1eraFase.py',192),
  ('oplog -> MENORQUE exp','oplog',2,'p_oplog','1eraFase.py',193),
  ('oplog -> DIFERENTE exp','oplog',2,'p_oplog','1eraFase.py',194),
  ('oplog -> MAYOROIGUAL exp','oplog',2,'p_oplog','1eraFase.py',195),
  ('oplog -> MENOROIGUAL exp','oplog',2,'p_oplog','1eraFase.py',196),
  ('oplog -> IGUALIGUAL exp','oplog',2,'p_oplog','1eraFase.py',197),
  ('oplog -> empty','oplog',1,'p_oplog','1eraFase.py',198),
  ('exp -> termino expr EOL','exp',3,'p_exp','1eraFase.py',204),
  ('expr -> MAS termino expr','expr',3,'p_expr','1eraFase.py',210),
  ('expr -> MENOS termino expr','expr',3,'p_expr','1eraFase.py',211),
  ('expr -> empty','expr',1,'p_expr','1eraFase.py',212),
  ('vars -> tipo vars2','vars',2,'p_vars','1eraFase.py',218),
  ('vars -> tipo LIST vars2','vars',3,'p_vars','1eraFase.py',219),
  ('varsr -> COMA ID varsr','varsr',3,'p_varsr','1eraFase.py',225),
  ('varsr -> empty','varsr',1,'p_varsr','1eraFase.py',226),
  ('vars2 -> ID varsr','vars2',2,'p_vars2','1eraFase.py',232),
  ('vars2 -> empty','vars2',1,'p_vars2','1eraFase.py',233),
  ('estatuto -> asignacion estatuto','estatuto',2,'p_estatuto','1eraFase.py',239),
  ('estatuto -> condicion estatuto','estatuto',2,'p_estatuto','1eraFase.py',240),
  ('estatuto -> escritura estatuto','estatuto',2,'p_estatuto','1eraFase.py',241),
  ('estatuto -> for estatuto','estatuto',2,'p_estatuto','1eraFase.py',242),
  ('estatuto -> while estatuto','estatuto',2,'p_estatuto','1eraFase.py',243),
  ('estatuto -> when estatuto','estatuto',2,'p_estatuto','1eraFase.py',244),
  ('estatuto -> empty','estatuto',1,'p_estatuto','1eraFase.py',245),
  ('asignacion -> ID asignacion3 IGUAL asignacion2 EOL','asignacion',5,'p_asignacion','1eraFase.py',251),
  ('asignacion2 -> expresion','asignacion2',1,'p_asignacion2','1eraFase.py',257),
  ('asignacion2 -> CORCHDER expresion asignacion2r CORCHIZQ','asignacion2',4,'p_asignacion2','1eraFase.py',258),
  ('asignacion2 -> READ PARIZQ expresion PARDER','asignacion2',4,'p_asignacion2','1eraFase.py',259),
  ('asignacion2r -> COMA expresion','asignacion2r',2,'p_asignacion2r','1eraFase.py',265),
  ('asignacion2r -> empty','asignacion2r',1,'p_asignacion2r','1eraFase.py',266),
  ('asignacion3 -> CORCHIZQ varcte CORCHDER','asignacion3',3,'p_asignacion3','1eraFase.py',272),
  ('asignacion3 -> PUNTO ID','asignacion3',2,'p_asignacion3','1eraFase.py',273),
  ('asignacion3 -> empty','asignacion3',1,'p_asignacion3','1eraFase.py',274),
  ('condicion -> IF condicion2 condicionr estatutor','condicion',4,'p_condicion','1eraFase.py',280),
  ('condicion2 -> PARIZQ expresion PARDER bloque','condicion2',4,'p_condicion2','1eraFase.py',286),
  ('condicionr -> ELSE IF condicion','condicionr',3,'p_condicionr','1eraFase.py',292),
  ('condicionr -> empty','condicionr',1,'p_condicionr','1eraFase.py',293),
  ('estatutor -> ELSE bloque','estatutor',2,'p_estatutor','1eraFase.py',299),
  ('estatutor -> empty','estatutor',1,'p_estatutor','1eraFase.py',300),
  ('escritura -> WRITE PARIZQ esc1 esc2 PARDER','escritura',5,'p_escritura','1eraFase.py',306),
  ('esc1 -> expresion','esc1',1,'p_esc1','1eraFase.py',312),
  ('esc1 -> STRING','esc1',1,'p_esc1','1eraFase.py',313),
  ('esc2 -> COMA esc1 esc2','esc2',3,'p_esc2','1eraFase.py',319),
  ('esc2 -> empty','esc2',1,'p_esc2','1eraFase.py',320),
  ('termino -> factor terminor','termino',2,'p_termino','1eraFase.py',326),
  ('terminor -> POR factor terminor','terminor',3,'p_terminor','1eraFase.py',332),
  ('terminor -> SOBRE factor terminor','terminor',3,'p_terminor','1eraFase.py',333),
  ('terminor -> empty','terminor',1,'p_terminor','1eraFase.py',334),
  ('tipo -> INT','tipo',1,'p_tipo','1eraFase.py',340),
  ('tipo -> FLOAT','tipo',1,'p_tipo','1eraFase.py',341),
  ('tipo -> BOOL','tipo',1,'p_tipo','1eraFase.py',342),
  ('tipo -> STRING','tipo',1,'p_tipo','1eraFase.py',343),
  ('tipo -> CID','tipo',1,'p_tipo','1eraFase.py',344),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','1eraFase.py',350),
  ('factor -> factor2 varcte','factor',2,'p_factor','1eraFase.py',351),
  ('varcter -> COMA varcte varcter','varcter',3,'p_varcter','1eraFase.py',357),
  ('varcter -> empty','varcter',1,'p_varcter','1eraFase.py',358),
  ('factor2 -> MAS','factor2',1,'p_factor2','1eraFase.py',364),
  ('factor2 -> MENOS','factor2',1,'p_factor2','1eraFase.py',365),
  ('factor2 -> empty','factor2',1,'p_factor2','1eraFase.py',366),
  ('varcte -> ID','varcte',1,'p_varcte','1eraFase.py',372),
  ('varcte -> INT','varcte',1,'p_varcte','1eraFase.py',373),
  ('varcte -> FLOAT','varcte',1,'p_varcte','1eraFase.py',374),
  ('varcte -> BOOL','varcte',1,'p_varcte','1eraFase.py',375),
  ('varcte -> STRING','varcte',1,'p_varcte','1eraFase.py',376),
  ('varcte -> ID CORCHIZQ varcte CORCHDER','varcte',4,'p_varcte','1eraFase.py',377),
  ('varcte -> ID PUNTO ID','varcte',3,'p_varcte','1eraFase.py',378),
  ('varcte -> ID PARIZQ expresion2 PARDER','varcte',4,'p_varcte','1eraFase.py',379),
  ('for -> FOR PARIZQ ID IN for2 PARDER bloque','for',7,'p_for','1eraFase.py',385),
  ('for2 -> ID','for2',1,'p_for2','1eraFase.py',391),
  ('for2 -> range','for2',1,'p_for2','1eraFase.py',392),
  ('range -> INT PUNTOSRANGO INT','range',3,'p_range','1eraFase.py',398),
  ('while -> WHILE PARIZQ expresion PARDER bloque','while',5,'p_while','1eraFase.py',404),
  ('when -> WHEN PARIZQ expresion PARDER LLAVEIZQ when2 LLAVEDER','when',7,'p_when','1eraFase.py',410),
  ('when2 -> varcte varcter FLECHITA bloque when2','when2',5,'p_when2','1eraFase.py',416),
  ('when2 -> IN range FLECHITA bloque when2','when2',5,'p_when2','1eraFase.py',417),
  ('when2 -> ELSE FLECHITA bloque when2','when2',4,'p_when2','1eraFase.py',418),
  ('when2 -> empty','when2',1,'p_when2','1eraFase.py',419),
  ('fun -> FUN ID PARIZQ fun2 PARDER fun3 bloque','fun',7,'p_fun','1eraFase.py',425),
  ('fun2 -> tipo ID varsr2','fun2',3,'p_fun2','1eraFase.py',431),
  ('fun3 -> DOSPUNTOS tipo','fun3',2,'p_fun3','1eraFase.py',437),
  ('fun3 -> empty','fun3',1,'p_fun3','1eraFase.py',438),
  ('varsr2 -> COMA tipo ID varsr2','varsr2',4,'p_varsr2','1eraFase.py',444),
  ('varsr2 -> empty','varsr2',1,'p_varsr2','1eraFase.py',445),
  ('body -> LLAVEIZQ body2 funr MAIN PARIZQ PARDER bloque LLAVEDER','body',8,'p_body','1eraFase.py',451),
  ('body2 -> vars','body2',1,'p_body2','1eraFase.py',457),
  ('body2 -> empty','body2',1,'p_body2','1eraFase.py',458),
  ('funr -> fun funr','funr',2,'p_funr','1eraFase.py',464),
  ('funr -> empty','funr',1,'p_funr','1eraFase.py',465),
  ('empty -> <empty>','empty',0,'p_empty','1eraFase.py',474),
]
