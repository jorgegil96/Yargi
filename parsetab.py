
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'classAND BOOL CID CLASS COLON COMA COMENTARIOS COMILLAS CORCHDER CORCHIZQ DIFERENTE DOSPUNTOS ELSE EOL FALSE FLECHITA FLOAT FLOATNUM FOR FUN GLOBAL ID IF IGUAL IGUALIGUAL IN INT INTNUM LIST LLAVEDER LLAVEIZQ MAIN MAS MAYOROIGUAL MAYORQUE MENOROIGUAL MENORQUE MENOS OR PARDER PARIZQ POR PRIVATE PUNTO PUNTOSRANGO RANGE READ RETURN SOBRE STRING STRINGVAL TRUE WHEN WHILE WRITE\n    resultado : class\n    \n    class : CLASS CID classparams class2 body\n    \n    class2 : DOSPUNTOS ID PARIZQ vars2 PARDER\n    | empty\n    \n    classparams : PARIZQ classparams2 PARDER\n    \n    classparams2 : vars\n    | empty\n    \n    varcte : ID\n    | INTNUM\n    | FLOATNUM\n    | TRUE\n    | FALSE\n    | STRING\n    | ID CORCHIZQ varcte CORCHDER\n    | ID PUNTO ID\n    | ID PARIZQ expresion2 PARDER\n    \n    expresion : megaexp\n   \n    expresionr : COMA expresion expresionr\n    | empty\n    \n    expresion2 : expresion expresionr\n    | empty\n    \n    superexp : exp oplog\n    \n    oplog : MAYORQUE exp\n    | MENORQUE exp\n    | DIFERENTE exp\n    | MAYOROIGUAL exp\n    | MENOROIGUAL exp\n    | IGUALIGUAL exp\n    | empty\n    \n    megaexp : superexp megaexpr\n    \n    megaexpr : AND superexp megaexpr\n    | OR superexp megaexpr\n    | empty\n    \n    vars : vars3 tipo vars2 COLON\n    | vars3 tipo LIST vars2 COLON\n    \n    varsr : COMA ID varsr\n    | empty\n    \n    vars2 : ID varsr\n    \n    vars3 : PRIVATE\n    | empty\n    \n    estatuto : asignacion estatuto\n    | condicion estatuto\n    | escritura estatuto\n    | for estatuto\n    | while estatuto\n    | when estatuto\n    | llamada estatuto\n    | empty\n    \n    asignacion : ID asignacion3 IGUAL asignacion2 COLON\n    \n    asignacion2 : expresion\n    | CORCHDER expresion asignacion2r CORCHIZQ\n    | READ PARIZQ STRING PARDER\n    \n    asignacion2r : COMA expresion asignacion2r\n    | empty\n    \n    asignacion3 : CORCHIZQ expresion CORCHDER\n    | PUNTO ID\n    | empty\n    \n    condicion : IF condicion2 estatutor\n    \n    condicion2 : PARIZQ expresion PARDER bloque\n    \n    condicionr : ELSE IF condicion2\n    | empty\n    \n    bloque : LLAVEIZQ estatuto bloque2 LLAVEDER\n    \n    bloque2 : RETURN bloque3\n    | empty\n    \n    bloque3 : expresion COLON\n    | empty\n    \n    estatutor : ELSE bloque\n    | empty\n    \n    escritura : WRITE PARIZQ esc1 esc2 PARDER\n    \n    esc1 : expresion\n    | STRING\n    \n    esc2 : COMA esc1 esc2\n    | empty\n    \n    tipo : INT\n    | FLOAT\n    | BOOL\n    | STRING\n    | CID\n    \n    factor : PARIZQ expresion PARDER\n    | factor2 varcte\n    \n    terminor : POR factor terminor\n    | SOBRE factor terminor\n    | empty\n    \n    termino : factor terminor\n    \n    exp : termino expr\n    \n    expr : MAS termino expr\n    | MENOS termino expr\n    | empty\n    \n    varcter : COMA varcte varcter\n    | empty\n    \n    factor2 : MAS\n    | MENOS\n    | empty\n    \n    for : FOR PARIZQ ID IN for2 PARDER bloque\n    \n    for2 : ID\n    | range\n    \n    range : INTNUM PUNTOSRANGO INTNUM\n        | ID PUNTOSRANGO ID\n    \n    while : WHILE PARIZQ expresion PARDER bloque\n    \n    when : WHEN LLAVEIZQ when2 LLAVEDER\n    \n    when2 : expresion FLECHITA bloque when2\n    | ELSE FLECHITA bloque\n    | empty\n    \n    fun : vars3 FUN ID PARIZQ fun2 PARDER fun3 funbody\n    \n    fun2 : tipo ID funparamr\n    | empty\n    \n    funparamr : COMA tipo ID funparamr\n    | empty\n    \n    fun3 : DOSPUNTOS tipo\n    | empty\n    \n    funbody : LLAVEIZQ opc1 opc2 bloque2 LLAVEDER\n    \n    opc1 : vars multvarsdecl\n    | empty\n    \n    opc2 : estatuto\n    | empty\n    \n    body : LLAVEIZQ body2 funr MAIN PARIZQ PARDER mainbloque LLAVEDER\n    \n    body2 : vars multvarsdecl\n    | empty\n    \n    mainbloque : LLAVEIZQ body2 estatuto LLAVEDER\n    \n    multvarsdecl : vars\n    | empty\n    \n    funr : fun funr\n    | empty\n    \n    llamada : ID PARIZQ llamada_param PARDER COLON\n    | empty\n    \n    llamada_param : expresion expresionr\n        | empty\n    empty : '
    
_lr_action_items = {'CLASS':([0,],[2,]),'$end':([1,14,61,],[0,-2,-116,]),'CID':([2,5,11,12,13,15,25,26,37,39,48,54,55,80,83,105,138,139,],[3,-128,-40,23,-39,-128,-128,-40,-40,-34,-35,23,-128,23,23,-128,-128,-40,]),'PARIZQ':([3,16,44,51,73,74,75,76,77,94,95,99,100,102,103,108,109,143,144,148,151,152,155,156,157,158,159,160,163,164,167,168,171,182,214,224,227,230,261,],[5,27,50,54,94,99,100,101,102,109,109,109,109,109,109,109,109,109,196,109,109,109,109,109,109,109,109,109,109,109,109,109,214,109,109,109,109,109,-62,]),'DOSPUNTOS':([4,17,62,],[7,-5,80,]),'LLAVEIZQ':([4,6,8,17,19,20,21,22,23,47,53,62,78,79,81,106,125,180,185,187,188,248,],[-128,15,-4,-5,-74,-75,-76,-77,-78,-3,55,-128,103,105,-110,-109,179,179,179,179,179,179,]),'PARDER':([5,9,10,11,30,38,39,41,43,48,49,50,52,54,57,59,63,82,84,94,110,111,112,113,114,115,116,117,127,128,129,130,132,140,145,147,149,150,153,154,161,162,165,166,169,170,171,172,173,174,175,176,181,183,193,197,199,200,201,202,203,204,205,206,207,208,209,210,211,214,218,219,220,221,232,233,234,235,236,237,238,239,241,242,243,244,246,258,259,260,262,264,],[-128,17,-6,-7,-128,47,-34,-38,-37,-35,-128,53,-36,-128,62,-106,-128,-105,-108,-128,146,-128,-127,-17,-128,-128,-128,-128,180,-128,-70,-71,185,-128,197,-126,-19,-30,-33,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,217,-73,-107,-79,-128,-128,-128,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,-128,-128,-95,248,-96,257,-18,-31,-32,-86,-87,-81,-82,-15,259,-128,-21,-72,-14,-16,-20,-98,-97,]),'INT':([5,11,12,13,15,25,26,37,39,48,54,55,80,83,105,138,139,],[-128,-40,19,-39,-128,-128,-40,-40,-34,-35,19,-128,19,19,-128,-128,-40,]),'FLOAT':([5,11,12,13,15,25,26,37,39,48,54,55,80,83,105,138,139,],[-128,-40,20,-39,-128,-128,-40,-40,-34,-35,20,-128,20,20,-128,-128,-40,]),'BOOL':([5,11,12,13,15,25,26,37,39,48,54,55,80,83,105,138,139,],[-128,-40,21,-39,-128,-128,-40,-40,-34,-35,21,-128,21,21,-128,-128,-40,]),'STRING':([5,11,12,13,15,25,26,37,39,48,54,55,80,83,94,95,99,100,102,103,105,108,109,112,118,119,120,122,136,138,139,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,196,212,214,224,227,230,244,254,261,],[-128,-40,22,-39,-128,-128,-40,-40,-34,-35,22,-128,22,22,-128,-128,-128,130,-128,-128,-128,-128,-128,-93,176,-91,-92,-93,-93,-128,-40,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,130,232,176,-128,-128,-128,-128,-93,-93,-62,]),'PRIVATE':([5,15,24,25,26,32,35,36,37,39,48,55,104,105,138,251,],[13,13,13,13,-118,13,-120,-117,-121,-34,-35,13,-104,13,13,-111,]),'ID':([7,18,19,20,21,22,23,25,26,27,29,35,36,37,39,42,46,48,55,58,60,65,66,67,68,69,70,71,72,94,95,96,98,99,100,101,102,103,105,107,108,109,112,118,119,120,122,124,126,136,137,138,139,143,148,151,152,155,156,157,158,159,160,163,164,167,168,178,179,182,184,186,191,192,194,198,212,213,214,216,217,223,224,227,230,244,247,254,261,263,],[16,30,-74,-75,-76,-77,-78,-128,-118,30,30,-120,-117,-121,-34,49,51,-35,-128,63,73,73,73,73,73,73,73,73,-125,-128,-128,123,-128,-128,-128,131,-128,-128,-128,140,-128,-128,-93,171,-91,-92,-93,-58,-68,-93,73,-128,-113,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-67,73,-128,219,-100,-125,-112,-49,-124,171,241,-128,-59,-69,-99,-128,-128,-128,-93,262,-93,-62,-94,]),'FUN':([13,15,24,25,26,32,33,34,35,36,37,39,48,104,251,],[-39,-128,-128,-128,-118,-128,-40,46,-120,-117,-121,-34,-35,-104,-111,]),'MAIN':([15,24,25,26,31,32,33,35,36,37,39,45,48,104,251,],[-128,-128,-128,-118,44,-128,-123,-120,-117,-121,-34,-122,-35,-104,-111,]),'LIST':([18,19,20,21,22,23,],[29,-74,-75,-76,-77,-78,]),'IF':([25,26,35,36,37,39,48,55,60,65,66,67,68,69,70,71,72,98,105,124,126,137,138,139,178,179,186,191,192,194,198,216,217,223,261,263,],[-128,-118,-120,-117,-121,-34,-35,-128,74,74,74,74,74,74,74,74,-125,-128,-128,-58,-68,74,-128,-113,-67,74,-100,-125,-112,-49,-124,-59,-69,-99,-62,-94,]),'WRITE':([25,26,35,36,37,39,48,55,60,65,66,67,68,69,70,71,72,98,105,124,126,137,138,139,178,179,186,191,192,194,198,216,217,223,261,263,],[-128,-118,-120,-117,-121,-34,-35,-128,75,75,75,75,75,75,75,75,-125,-128,-128,-58,-68,75,-128,-113,-67,75,-100,-125,-112,-49,-124,-59,-69,-99,-62,-94,]),'FOR':([25,26,35,36,37,39,48,55,60,65,66,67,68,69,70,71,72,98,105,124,126,137,138,139,178,179,186,191,192,194,198,216,217,223,261,263,],[-128,-118,-120,-117,-121,-34,-35,-128,76,76,76,76,76,76,76,76,-125,-128,-128,-58,-68,76,-128,-113,-67,76,-100,-125,-112,-49,-124,-59,-69,-99,-62,-94,]),'WHILE':([25,26,35,36,37,39,48,55,60,65,66,67,68,69,70,71,72,98,105,124,126,137,138,139,178,179,186,191,192,194,198,216,217,223,261,263,],[-128,-118,-120,-117,-121,-34,-35,-128,77,77,77,77,77,77,77,77,-125,-128,-128,-58,-68,77,-128,-113,-67,77,-100,-125,-112,-49,-124,-59,-69,-99,-62,-94,]),'WHEN':([25,26,35,36,37,39,48,55,60,65,66,67,68,69,70,71,72,98,105,124,126,137,138,139,178,179,186,191,192,194,198,216,217,223,261,263,],[-128,-118,-120,-117,-121,-34,-35,-128,78,78,78,78,78,78,78,78,-125,-128,-128,-58,-68,78,-128,-113,-67,78,-100,-125,-112,-49,-124,-59,-69,-99,-62,-94,]),'LLAVEDER':([25,26,35,36,37,39,48,55,56,60,64,65,66,67,68,69,70,71,72,85,86,87,88,89,90,91,92,98,103,105,124,126,133,136,137,138,139,178,179,186,189,190,191,192,194,198,215,216,217,223,224,225,226,227,228,245,250,252,254,261,263,265,],[-128,-118,-120,-117,-121,-34,-35,-128,61,-128,85,-128,-128,-128,-128,-128,-128,-128,-48,-119,-41,-42,-43,-44,-45,-46,-47,-128,-128,-128,-58,-68,186,-103,-128,-128,-113,-67,-128,-100,-128,-114,-48,-112,-49,-124,-128,-59,-69,-99,-128,-102,251,-128,-64,261,-101,-63,-66,-62,-94,-65,]),'COLON':([28,30,40,41,43,49,52,113,114,115,116,117,141,142,146,150,153,154,161,162,165,166,169,170,171,172,173,174,175,176,197,200,201,202,203,204,205,206,207,208,209,210,211,234,235,236,237,238,239,241,253,255,257,258,259,],[39,-128,48,-38,-37,-128,-36,-17,-128,-128,-128,-128,194,-50,198,-30,-33,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,-31,-32,-86,-87,-81,-82,-15,265,-51,-52,-14,-16,]),'COMA':([30,49,63,111,113,114,115,116,117,128,129,130,140,150,153,154,161,162,165,166,169,170,171,172,173,174,175,176,195,197,199,200,201,202,203,204,205,206,207,208,209,210,211,218,234,235,236,237,238,239,241,243,256,258,259,],[42,42,83,148,-17,-128,-128,-128,-128,182,-70,-71,83,-30,-33,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,230,-79,148,-128,-128,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,182,-31,-32,-86,-87,-81,-82,-15,148,230,-14,-16,]),'RETURN':([35,37,39,48,65,66,67,68,69,70,71,72,86,87,88,89,90,91,92,98,105,124,126,137,138,139,178,179,186,189,190,191,192,194,198,215,216,217,223,261,263,],[-120,-121,-34,-35,-128,-128,-128,-128,-128,-128,-128,-48,-41,-42,-43,-44,-45,-46,-47,-128,-128,-58,-68,-128,-128,-113,-67,-128,-100,227,-114,-48,-112,-49,-124,227,-59,-69,-99,-62,-94,]),'CORCHIZQ':([73,113,114,115,116,117,150,153,154,161,162,165,166,169,170,171,172,173,174,175,176,195,197,200,201,202,203,204,205,206,207,208,209,210,211,229,231,234,235,236,237,238,239,241,256,258,259,266,],[95,-17,-128,-128,-128,-128,-30,-33,-22,-29,-85,-88,-84,-83,-80,212,-9,-10,-11,-12,-13,-128,-79,-128,-128,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,255,-54,-31,-32,-86,-87,-81,-82,-15,-128,-14,-16,-53,]),'PUNTO':([73,171,],[96,213,]),'IGUAL':([73,93,97,123,177,],[-128,108,-57,-56,-55,]),'INTNUM':([94,95,99,100,102,103,108,109,112,118,119,120,122,136,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,184,212,214,224,227,230,244,249,254,261,],[-128,-128,-128,-128,-128,-128,-128,-128,-93,172,-91,-92,-93,-93,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,222,172,-128,-128,-128,-128,-93,264,-93,-62,]),'FLOATNUM':([94,95,99,100,102,103,108,109,112,118,119,120,122,136,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,212,214,224,227,230,244,254,261,],[-128,-128,-128,-128,-128,-128,-128,-128,-93,173,-91,-92,-93,-93,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,173,-128,-128,-128,-128,-93,-93,-62,]),'TRUE':([94,95,99,100,102,103,108,109,112,118,119,120,122,136,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,212,214,224,227,230,244,254,261,],[-128,-128,-128,-128,-128,-128,-128,-128,-93,174,-91,-92,-93,-93,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,174,-128,-128,-128,-128,-93,-93,-62,]),'FALSE':([94,95,99,100,102,103,108,109,112,118,119,120,122,136,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,212,214,224,227,230,244,254,261,],[-128,-128,-128,-128,-128,-128,-128,-128,-93,175,-91,-92,-93,-93,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,175,-128,-128,-128,-128,-93,-93,-62,]),'MAS':([94,95,99,100,102,103,108,109,116,117,143,148,151,152,155,156,157,158,159,160,163,164,166,167,168,169,170,171,172,173,174,175,176,182,197,208,209,210,211,214,224,227,230,238,239,241,258,259,261,],[119,119,119,119,119,119,119,119,163,-128,119,119,119,119,119,119,119,119,119,119,119,119,-84,119,119,-83,-80,-8,-9,-10,-11,-12,-13,119,-79,163,163,-128,-128,119,119,119,119,-81,-82,-15,-14,-16,-62,]),'MENOS':([94,95,99,100,102,103,108,109,116,117,143,148,151,152,155,156,157,158,159,160,163,164,166,167,168,169,170,171,172,173,174,175,176,182,197,208,209,210,211,214,224,227,230,238,239,241,258,259,261,],[120,120,120,120,120,120,120,120,164,-128,120,120,120,120,120,120,120,120,120,120,120,120,-84,120,120,-83,-80,-8,-9,-10,-11,-12,-13,120,-79,164,164,-128,-128,120,120,120,120,-81,-82,-15,-14,-16,-62,]),'ELSE':([98,103,216,224,261,],[125,135,-59,135,-62,]),'CORCHDER':([108,113,114,115,116,117,121,150,153,154,161,162,165,166,169,170,171,172,173,174,175,176,197,200,201,202,203,204,205,206,207,208,209,210,211,234,235,236,237,238,239,240,241,258,259,],[143,-17,-128,-128,-128,-128,177,-30,-33,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,-31,-32,-86,-87,-81,-82,258,-15,-14,-16,]),'READ':([108,],[144,]),'FLECHITA':([113,114,115,116,117,134,135,150,153,154,161,162,165,166,169,170,171,172,173,174,175,176,197,200,201,202,203,204,205,206,207,208,209,210,211,234,235,236,237,238,239,241,258,259,],[-17,-128,-128,-128,-128,187,188,-30,-33,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,-31,-32,-86,-87,-81,-82,-15,-14,-16,]),'AND':([114,115,116,117,154,161,162,165,166,169,170,171,172,173,174,175,176,197,200,201,202,203,204,205,206,207,208,209,210,211,236,237,238,239,241,258,259,],[151,-128,-128,-128,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,151,151,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'OR':([114,115,116,117,154,161,162,165,166,169,170,171,172,173,174,175,176,197,200,201,202,203,204,205,206,207,208,209,210,211,236,237,238,239,241,258,259,],[152,-128,-128,-128,-22,-29,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,152,152,-23,-24,-25,-26,-27,-28,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'MAYORQUE':([115,116,117,162,165,166,169,170,171,172,173,174,175,176,197,208,209,210,211,236,237,238,239,241,258,259,],[155,-128,-128,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'MENORQUE':([115,116,117,162,165,166,169,170,171,172,173,174,175,176,197,208,209,210,211,236,237,238,239,241,258,259,],[156,-128,-128,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'DIFERENTE':([115,116,117,162,165,166,169,170,171,172,173,174,175,176,197,208,209,210,211,236,237,238,239,241,258,259,],[157,-128,-128,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'MAYOROIGUAL':([115,116,117,162,165,166,169,170,171,172,173,174,175,176,197,208,209,210,211,236,237,238,239,241,258,259,],[158,-128,-128,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'MENOROIGUAL':([115,116,117,162,165,166,169,170,171,172,173,174,175,176,197,208,209,210,211,236,237,238,239,241,258,259,],[159,-128,-128,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'IGUALIGUAL':([115,116,117,162,165,166,169,170,171,172,173,174,175,176,197,208,209,210,211,236,237,238,239,241,258,259,],[160,-128,-128,-85,-88,-84,-83,-80,-8,-9,-10,-11,-12,-13,-79,-128,-128,-128,-128,-86,-87,-81,-82,-15,-14,-16,]),'POR':([117,170,171,172,173,174,175,176,197,210,211,241,258,259,],[167,-80,-8,-9,-10,-11,-12,-13,-79,167,167,-15,-14,-16,]),'SOBRE':([117,170,171,172,173,174,175,176,197,210,211,241,258,259,],[168,-80,-8,-9,-10,-11,-12,-13,-79,168,168,-15,-14,-16,]),'IN':([131,],[184,]),'PUNTOSRANGO':([219,222,],[247,249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'class':([0,],[1,]),'classparams':([3,],[4,]),'class2':([4,],[6,]),'empty':([4,5,15,24,25,30,32,49,54,55,60,62,63,65,66,67,68,69,70,71,73,94,95,98,99,100,102,103,105,108,109,111,114,115,116,117,128,137,138,140,143,148,151,152,155,156,157,158,159,160,163,164,167,168,179,182,189,195,199,200,201,208,209,210,211,214,215,218,224,227,230,243,256,],[8,11,26,33,37,43,33,43,59,26,72,81,84,72,72,72,72,72,72,72,97,112,122,126,122,122,122,136,139,122,122,149,153,161,165,169,183,191,37,84,122,122,122,122,122,122,122,122,122,122,122,122,122,122,72,122,228,231,149,153,153,165,165,169,169,244,228,183,136,254,122,149,231,]),'classparams2':([5,],[9,]),'vars':([5,15,25,55,105,138,],[10,25,35,25,138,35,]),'vars3':([5,15,24,25,32,55,105,138,],[12,12,34,12,34,12,12,12,]),'body':([6,],[14,]),'tipo':([12,54,80,83,],[18,58,106,107,]),'body2':([15,55,],[24,60,]),'vars2':([18,27,29,],[28,38,40,]),'funr':([24,32,],[31,45,]),'fun':([24,32,],[32,32,]),'multvarsdecl':([25,138,],[36,192,]),'varsr':([30,49,],[41,52,]),'mainbloque':([53,],[56,]),'fun2':([54,],[57,]),'estatuto':([60,65,66,67,68,69,70,71,137,179,],[64,86,87,88,89,90,91,92,190,215,]),'asignacion':([60,65,66,67,68,69,70,71,137,179,],[65,65,65,65,65,65,65,65,65,65,]),'condicion':([60,65,66,67,68,69,70,71,137,179,],[66,66,66,66,66,66,66,66,66,66,]),'escritura':([60,65,66,67,68,69,70,71,137,179,],[67,67,67,67,67,67,67,67,67,67,]),'for':([60,65,66,67,68,69,70,71,137,179,],[68,68,68,68,68,68,68,68,68,68,]),'while':([60,65,66,67,68,69,70,71,137,179,],[69,69,69,69,69,69,69,69,69,69,]),'when':([60,65,66,67,68,69,70,71,137,179,],[70,70,70,70,70,70,70,70,70,70,]),'llamada':([60,65,66,67,68,69,70,71,137,179,],[71,71,71,71,71,71,71,71,71,71,]),'fun3':([62,],[79,]),'funparamr':([63,140,],[82,193,]),'asignacion3':([73,],[93,]),'condicion2':([74,],[98,]),'funbody':([79,],[104,]),'llamada_param':([94,],[110,]),'expresion':([94,95,99,100,102,103,108,109,143,148,182,214,224,227,230,],[111,121,127,129,132,134,142,145,195,199,129,243,134,253,256,]),'megaexp':([94,95,99,100,102,103,108,109,143,148,182,214,224,227,230,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'superexp':([94,95,99,100,102,103,108,109,143,148,151,152,182,214,224,227,230,],[114,114,114,114,114,114,114,114,114,114,200,201,114,114,114,114,114,]),'exp':([94,95,99,100,102,103,108,109,143,148,151,152,155,156,157,158,159,160,182,214,224,227,230,],[115,115,115,115,115,115,115,115,115,115,115,115,202,203,204,205,206,207,115,115,115,115,115,]),'termino':([94,95,99,100,102,103,108,109,143,148,151,152,155,156,157,158,159,160,163,164,182,214,224,227,230,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,208,209,116,116,116,116,116,]),'factor':([94,95,99,100,102,103,108,109,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,214,224,227,230,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,210,211,117,117,117,117,117,]),'factor2':([94,95,99,100,102,103,108,109,143,148,151,152,155,156,157,158,159,160,163,164,167,168,182,214,224,227,230,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'estatutor':([98,],[124,]),'esc1':([100,182,],[128,218,]),'when2':([103,224,],[133,250,]),'opc1':([105,],[137,]),'asignacion2':([108,],[141,]),'expresionr':([111,199,243,],[147,233,260,]),'megaexpr':([114,200,201,],[150,234,235,]),'oplog':([115,],[154,]),'expr':([116,208,209,],[162,236,237,]),'terminor':([117,210,211,],[166,238,239,]),'varcte':([118,212,],[170,240,]),'bloque':([125,180,185,187,188,248,],[178,216,223,224,225,263,]),'esc2':([128,218,],[181,246,]),'opc2':([137,],[189,]),'for2':([184,],[220,]),'range':([184,],[221,]),'bloque2':([189,215,],[226,245,]),'asignacion2r':([195,256,],[229,266,]),'expresion2':([214,],[242,]),'bloque3':([227,],[252,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> class","S'",1,None,None,None),
  ('resultado -> class','resultado',1,'p_resultado','parser.py',148),
  ('class -> CLASS CID classparams class2 body','class',5,'p_class','parser.py',154),
  ('class2 -> DOSPUNTOS ID PARIZQ vars2 PARDER','class2',5,'p_class2','parser.py',162),
  ('class2 -> empty','class2',1,'p_class2','parser.py',163),
  ('classparams -> PARIZQ classparams2 PARDER','classparams',3,'p_classparams','parser.py',169),
  ('classparams2 -> vars','classparams2',1,'p_classparams2','parser.py',175),
  ('classparams2 -> empty','classparams2',1,'p_classparams2','parser.py',176),
  ('varcte -> ID','varcte',1,'p_varcte','parser.py',182),
  ('varcte -> INTNUM','varcte',1,'p_varcte','parser.py',183),
  ('varcte -> FLOATNUM','varcte',1,'p_varcte','parser.py',184),
  ('varcte -> TRUE','varcte',1,'p_varcte','parser.py',185),
  ('varcte -> FALSE','varcte',1,'p_varcte','parser.py',186),
  ('varcte -> STRING','varcte',1,'p_varcte','parser.py',187),
  ('varcte -> ID CORCHIZQ varcte CORCHDER','varcte',4,'p_varcte','parser.py',188),
  ('varcte -> ID PUNTO ID','varcte',3,'p_varcte','parser.py',189),
  ('varcte -> ID PARIZQ expresion2 PARDER','varcte',4,'p_varcte','parser.py',190),
  ('expresion -> megaexp','expresion',1,'p_expresion','parser.py',198),
  ('expresionr -> COMA expresion expresionr','expresionr',3,'p_expresionr','parser.py',208),
  ('expresionr -> empty','expresionr',1,'p_expresionr','parser.py',209),
  ('expresion2 -> expresion expresionr','expresion2',2,'p_expresion2','parser.py',219),
  ('expresion2 -> empty','expresion2',1,'p_expresion2','parser.py',220),
  ('superexp -> exp oplog','superexp',2,'p_superexp','parser.py',226),
  ('oplog -> MAYORQUE exp','oplog',2,'p_oplog','parser.py',233),
  ('oplog -> MENORQUE exp','oplog',2,'p_oplog','parser.py',234),
  ('oplog -> DIFERENTE exp','oplog',2,'p_oplog','parser.py',235),
  ('oplog -> MAYOROIGUAL exp','oplog',2,'p_oplog','parser.py',236),
  ('oplog -> MENOROIGUAL exp','oplog',2,'p_oplog','parser.py',237),
  ('oplog -> IGUALIGUAL exp','oplog',2,'p_oplog','parser.py',238),
  ('oplog -> empty','oplog',1,'p_oplog','parser.py',239),
  ('megaexp -> superexp megaexpr','megaexp',2,'p_megaexp','parser.py',249),
  ('megaexpr -> AND superexp megaexpr','megaexpr',3,'p_megaexpr','parser.py',256),
  ('megaexpr -> OR superexp megaexpr','megaexpr',3,'p_megaexpr','parser.py',257),
  ('megaexpr -> empty','megaexpr',1,'p_megaexpr','parser.py',258),
  ('vars -> vars3 tipo vars2 COLON','vars',4,'p_vars','parser.py',268),
  ('vars -> vars3 tipo LIST vars2 COLON','vars',5,'p_vars','parser.py',269),
  ('varsr -> COMA ID varsr','varsr',3,'p_varsr','parser.py',281),
  ('varsr -> empty','varsr',1,'p_varsr','parser.py',282),
  ('vars2 -> ID varsr','vars2',2,'p_vars2','parser.py',292),
  ('vars3 -> PRIVATE','vars3',1,'p_vars3','parser.py',299),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',300),
  ('estatuto -> asignacion estatuto','estatuto',2,'p_estatuto','parser.py',307),
  ('estatuto -> condicion estatuto','estatuto',2,'p_estatuto','parser.py',308),
  ('estatuto -> escritura estatuto','estatuto',2,'p_estatuto','parser.py',309),
  ('estatuto -> for estatuto','estatuto',2,'p_estatuto','parser.py',310),
  ('estatuto -> while estatuto','estatuto',2,'p_estatuto','parser.py',311),
  ('estatuto -> when estatuto','estatuto',2,'p_estatuto','parser.py',312),
  ('estatuto -> llamada estatuto','estatuto',2,'p_estatuto','parser.py',313),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',314),
  ('asignacion -> ID asignacion3 IGUAL asignacion2 COLON','asignacion',5,'p_asignacion','parser.py',324),
  ('asignacion2 -> expresion','asignacion2',1,'p_asignacion2','parser.py',331),
  ('asignacion2 -> CORCHDER expresion asignacion2r CORCHIZQ','asignacion2',4,'p_asignacion2','parser.py',332),
  ('asignacion2 -> READ PARIZQ STRING PARDER','asignacion2',4,'p_asignacion2','parser.py',333),
  ('asignacion2r -> COMA expresion asignacion2r','asignacion2r',3,'p_asignacion2r','parser.py',341),
  ('asignacion2r -> empty','asignacion2r',1,'p_asignacion2r','parser.py',342),
  ('asignacion3 -> CORCHIZQ expresion CORCHDER','asignacion3',3,'p_asignacion3','parser.py',348),
  ('asignacion3 -> PUNTO ID','asignacion3',2,'p_asignacion3','parser.py',349),
  ('asignacion3 -> empty','asignacion3',1,'p_asignacion3','parser.py',350),
  ('condicion -> IF condicion2 estatutor','condicion',3,'p_condicion','parser.py',356),
  ('condicion2 -> PARIZQ expresion PARDER bloque','condicion2',4,'p_condicion2','parser.py',364),
  ('condicionr -> ELSE IF condicion2','condicionr',3,'p_condicionr','parser.py',371),
  ('condicionr -> empty','condicionr',1,'p_condicionr','parser.py',372),
  ('bloque -> LLAVEIZQ estatuto bloque2 LLAVEDER','bloque',4,'p_bloque','parser.py',378),
  ('bloque2 -> RETURN bloque3','bloque2',2,'p_bloque2','parser.py',385),
  ('bloque2 -> empty','bloque2',1,'p_bloque2','parser.py',386),
  ('bloque3 -> expresion COLON','bloque3',2,'p_bloque3','parser.py',396),
  ('bloque3 -> empty','bloque3',1,'p_bloque3','parser.py',397),
  ('estatutor -> ELSE bloque','estatutor',2,'p_estatutor','parser.py',407),
  ('estatutor -> empty','estatutor',1,'p_estatutor','parser.py',408),
  ('escritura -> WRITE PARIZQ esc1 esc2 PARDER','escritura',5,'p_escritura','parser.py',418),
  ('esc1 -> expresion','esc1',1,'p_esc1','parser.py',424),
  ('esc1 -> STRING','esc1',1,'p_esc1','parser.py',425),
  ('esc2 -> COMA esc1 esc2','esc2',3,'p_esc2','parser.py',431),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',432),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',438),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',439),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',440),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',441),
  ('tipo -> CID','tipo',1,'p_tipo','parser.py',442),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','parser.py',449),
  ('factor -> factor2 varcte','factor',2,'p_factor','parser.py',450),
  ('terminor -> POR factor terminor','terminor',3,'p_terminor','parser.py',460),
  ('terminor -> SOBRE factor terminor','terminor',3,'p_terminor','parser.py',461),
  ('terminor -> empty','terminor',1,'p_terminor','parser.py',462),
  ('termino -> factor terminor','termino',2,'p_termino','parser.py',478),
  ('exp -> termino expr','exp',2,'p_exp','parser.py',485),
  ('expr -> MAS termino expr','expr',3,'p_expr','parser.py',492),
  ('expr -> MENOS termino expr','expr',3,'p_expr','parser.py',493),
  ('expr -> empty','expr',1,'p_expr','parser.py',494),
  ('varcter -> COMA varcte varcter','varcter',3,'p_varcter','parser.py',510),
  ('varcter -> empty','varcter',1,'p_varcter','parser.py',511),
  ('factor2 -> MAS','factor2',1,'p_factor2','parser.py',517),
  ('factor2 -> MENOS','factor2',1,'p_factor2','parser.py',518),
  ('factor2 -> empty','factor2',1,'p_factor2','parser.py',519),
  ('for -> FOR PARIZQ ID IN for2 PARDER bloque','for',7,'p_for','parser.py',535),
  ('for2 -> ID','for2',1,'p_for2','parser.py',542),
  ('for2 -> range','for2',1,'p_for2','parser.py',543),
  ('range -> INTNUM PUNTOSRANGO INTNUM','range',3,'p_range','parser.py',550),
  ('range -> ID PUNTOSRANGO ID','range',3,'p_range','parser.py',551),
  ('while -> WHILE PARIZQ expresion PARDER bloque','while',5,'p_while','parser.py',560),
  ('when -> WHEN LLAVEIZQ when2 LLAVEDER','when',4,'p_when','parser.py',567),
  ('when2 -> expresion FLECHITA bloque when2','when2',4,'p_when2','parser.py',574),
  ('when2 -> ELSE FLECHITA bloque','when2',3,'p_when2','parser.py',575),
  ('when2 -> empty','when2',1,'p_when2','parser.py',576),
  ('fun -> vars3 FUN ID PARIZQ fun2 PARDER fun3 funbody','fun',8,'p_fun','parser.py',588),
  ('fun2 -> tipo ID funparamr','fun2',3,'p_fun2','parser.py',597),
  ('fun2 -> empty','fun2',1,'p_fun2','parser.py',598),
  ('funparamr -> COMA tipo ID funparamr','funparamr',4,'p_funparamr','parser.py',608),
  ('funparamr -> empty','funparamr',1,'p_funparamr','parser.py',609),
  ('fun3 -> DOSPUNTOS tipo','fun3',2,'p_fun3','parser.py',619),
  ('fun3 -> empty','fun3',1,'p_fun3','parser.py',620),
  ('funbody -> LLAVEIZQ opc1 opc2 bloque2 LLAVEDER','funbody',5,'p_funbody','parser.py',630),
  ('opc1 -> vars multvarsdecl','opc1',2,'p_opc1','parser.py',637),
  ('opc1 -> empty','opc1',1,'p_opc1','parser.py',638),
  ('opc2 -> estatuto','opc2',1,'p_opc2','parser.py',648),
  ('opc2 -> empty','opc2',1,'p_opc2','parser.py',649),
  ('body -> LLAVEIZQ body2 funr MAIN PARIZQ PARDER mainbloque LLAVEDER','body',8,'p_body','parser.py',659),
  ('body2 -> vars multvarsdecl','body2',2,'p_body2','parser.py',666),
  ('body2 -> empty','body2',1,'p_body2','parser.py',667),
  ('mainbloque -> LLAVEIZQ body2 estatuto LLAVEDER','mainbloque',4,'p_mainbloque','parser.py',677),
  ('multvarsdecl -> vars','multvarsdecl',1,'p_multvarsdecl','parser.py',684),
  ('multvarsdecl -> empty','multvarsdecl',1,'p_multvarsdecl','parser.py',685),
  ('funr -> fun funr','funr',2,'p_funr','parser.py',695),
  ('funr -> empty','funr',1,'p_funr','parser.py',696),
  ('llamada -> ID PARIZQ llamada_param PARDER COLON','llamada',5,'p_llamada','parser.py',706),
  ('llamada -> empty','llamada',1,'p_llamada','parser.py',707),
  ('llamada_param -> expresion expresionr','llamada_param',2,'p_llamada_param','parser.py',714),
  ('llamada_param -> empty','llamada_param',1,'p_llamada_param','parser.py',715),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',731),
]
