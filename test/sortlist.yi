class Node(int value, Node next) {

    fun getValue(): int {
        return value;
    }

    fun setValue(int v) {
        value = v;
    }

    fun getNext(): Node {
        return next;
    }

    fun setNext(Node n) {
        next = n;
    }
}

class List {

    Node head;
    int size;

    fun add(int value) {
        Node node, new;

        new = Node(value, null);

        if (size == 0) {
            head = new;
        } else {
            node = head;
            while (node.getNext() != null) {
                node = node.getNext();
            }
            node.setNext(new);
        }

        size = size + 1;
    }

    fun get(int index): int {
        int i;
        Node node;

        i = 0;
        node = head;
        while (i != index) {
            node = node.next;
            i = i + 1;
        }

        return node.value;
    }

    fun set(int index, int value) {
        int i;
        Node node;

        i = 0;
        node = head;
        while (i != index) {
            node = node.next;
            i = i + 1;
        }

        node.setValue(value);
    }

    fun size(): int {
        return size;
    }

    fun print() {
        Node node;

        node = head;

        if (node == null){
            write("[]");
        } else {
            write("[");
            while (node.getNext() != null) {
                write(node.getValue());
                node = node.getNext();
            }
            write("]");
        }
    }
}

class Main {

    List myList;

    fun sort() {
        int lim, i, j, tmp, tmp2;

        lim = myList.size() - 1;

        for (i in 0..lim) {
            for (j in 0..lim) {
                if (myList.get(j) > myList.get(j + 1)) {
                    tmp = myList.get(j);
                    tmp2 = myList.get(j + 1);

                    myList.set(j, tmp2);
                    myList.set(j + 1, tmp);
                }
            }
        }
    }

    main() {
        int lim, i, j, tmp, tmp2, tmp3, tmp4;

        myList = List();

        myList.add(64);
        myList.add(34);
        myList.add(25);
        myList.add(12);
        myList.add(22);
        myList.add(11);
        myList.add(90);

        myList.print();

        lim = myList.size() - 1;

        for (i in 0..lim) {
            for (j in 0..lim) {
                if (myList.get(j) > myList.get(j + 1)) {
                    tmp = myList.get(j);
                    tmp2 = myList.get(j + 1);

                    myList.set(j, tmp2);
                    myList.set(j + 1, tmp);
                }
            }
        }

        myList.print();
    }
}